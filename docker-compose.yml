version: "2"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: yarn start
    depends_on:
      - postgres
      - redis
      - rabbitmq
    env_file: ./api/.env
    ports:
      - "4000:4000"
    volumes:
      - ./api:/app
      - /app/node_modules

  search:
    build:
      context: ./services/search
      dockerfile: Dockerfile
    command: yarn start
    depends_on:
      - api
      - redis
    ports:
      - "4001:4001"
    volumes:
      - ./services/search:/app
      - /app/node_modules

  postgres:
    image: mdillon/postgis
    ports:
      - "35432:5432"
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: bitnami/redis
    ports:
      - "6370:6379"
    env_file: .env
    environment:
      - DISABLE_COMMANDS=
    volumes:
      - redisdata:/bitnami/redis/data

  rabbitmq:
    image: bitnami/rabbitmq:latest
    ports:
    - "15672:5672"
    - "15671:5671"
    - "15000:15672" # admin panel
    volumes:
    - mqdata:/bitnami
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

  service-notify:
    build:
      context: ./services/notify
      dockerfile: Dockerfile
    command: yarn start
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file: ./services/notify/.env
    environment:
      - NODE_ENV=production
    volumes:
      - ./services/notify:/app
      - /app/node_modules

volumes:
  pgdata:
  redisdata:
  mqdata:
